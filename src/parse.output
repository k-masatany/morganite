Terminals unused in grammar

   FAT_ARROW
   OP_PLUSE
   OP_MINUS
   OP_MULTI
   OP_DIVIS
   OP_AND
   OP_OR
   OP_XOR
   OP_NOT


文法

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: expr
    4          | OP_PRINT lit

    5 expr: lit
    6     | ident
    7     | ident OP_BIND expr

    8 ident: IDENT

    9 lit: LIT_BYTE
   10    | LIT_CHAR
   11    | LIT_INTEGER
   12    | LIT_FLOAT
   13    | TRUE
   14    | FALSE
   15    | str

   16 str: LIT_STR


出現位置の規則による終端

$end (0) 0
error (256)
FAT_ARROW (258)
LIT_BYTE (259) 9
LIT_CHAR (260) 10
LIT_INTEGER (261) 11
LIT_FLOAT (262) 12
LIT_STR (263) 16
TRUE (264) 13
FALSE (265) 14
IDENT (266) 8
OP_PLUSE (267)
OP_MINUS (268)
OP_MULTI (269)
OP_DIVIS (270)
OP_AND (271)
OP_OR (272)
OP_XOR (273)
OP_NOT (274)
OP_BIND (275) 7
OP_PRINT (276) 4


出現位置の規則による非終端

$accept (22)
    左辺: 0
program (23)
    左辺: 1 2, 右辺: 0 2
statement (24)
    左辺: 3 4, 右辺: 1 2
expr (25)
    左辺: 5 6 7, 右辺: 3 7
ident (26)
    左辺: 8, 右辺: 6 7
lit (27)
    左辺: 9 10 11 12 13 14 15, 右辺: 4 5
str (28)
    左辺: 16, 右辺: 15


State 0

    0 $accept: . program $end

    LIT_BYTE     shift, and go to state 1
    LIT_CHAR     shift, and go to state 2
    LIT_INTEGER  shift, and go to state 3
    LIT_FLOAT    shift, and go to state 4
    LIT_STR      shift, and go to state 5
    TRUE         shift, and go to state 6
    FALSE        shift, and go to state 7
    IDENT        shift, and go to state 8
    OP_PRINT     shift, and go to state 9

    program    go to state 10
    statement  go to state 11
    expr       go to state 12
    ident      go to state 13
    lit        go to state 14
    str        go to state 15


State 1

    9 lit: LIT_BYTE .

    $default  reduce using rule 9 (lit)


State 2

   10 lit: LIT_CHAR .

    $default  reduce using rule 10 (lit)


State 3

   11 lit: LIT_INTEGER .

    $default  reduce using rule 11 (lit)


State 4

   12 lit: LIT_FLOAT .

    $default  reduce using rule 12 (lit)


State 5

   16 str: LIT_STR .

    $default  reduce using rule 16 (str)


State 6

   13 lit: TRUE .

    $default  reduce using rule 13 (lit)


State 7

   14 lit: FALSE .

    $default  reduce using rule 14 (lit)


State 8

    8 ident: IDENT .

    $default  reduce using rule 8 (ident)


State 9

    4 statement: OP_PRINT . lit

    LIT_BYTE     shift, and go to state 1
    LIT_CHAR     shift, and go to state 2
    LIT_INTEGER  shift, and go to state 3
    LIT_FLOAT    shift, and go to state 4
    LIT_STR      shift, and go to state 5
    TRUE         shift, and go to state 6
    FALSE        shift, and go to state 7

    lit  go to state 16
    str  go to state 15


State 10

    0 $accept: program . $end
    2 program: program . statement

    $end         shift, and go to state 17
    LIT_BYTE     shift, and go to state 1
    LIT_CHAR     shift, and go to state 2
    LIT_INTEGER  shift, and go to state 3
    LIT_FLOAT    shift, and go to state 4
    LIT_STR      shift, and go to state 5
    TRUE         shift, and go to state 6
    FALSE        shift, and go to state 7
    IDENT        shift, and go to state 8
    OP_PRINT     shift, and go to state 9

    statement  go to state 18
    expr       go to state 12
    ident      go to state 13
    lit        go to state 14
    str        go to state 15


State 11

    1 program: statement .

    $default  reduce using rule 1 (program)


State 12

    3 statement: expr .

    $default  reduce using rule 3 (statement)


State 13

    6 expr: ident .
    7     | ident . OP_BIND expr

    OP_BIND  shift, and go to state 19

    $default  reduce using rule 6 (expr)


State 14

    5 expr: lit .

    $default  reduce using rule 5 (expr)


State 15

   15 lit: str .

    $default  reduce using rule 15 (lit)


State 16

    4 statement: OP_PRINT lit .

    $default  reduce using rule 4 (statement)


State 17

    0 $accept: program $end .

    $default  accept


State 18

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 19

    7 expr: ident OP_BIND . expr

    LIT_BYTE     shift, and go to state 1
    LIT_CHAR     shift, and go to state 2
    LIT_INTEGER  shift, and go to state 3
    LIT_FLOAT    shift, and go to state 4
    LIT_STR      shift, and go to state 5
    TRUE         shift, and go to state 6
    FALSE        shift, and go to state 7
    IDENT        shift, and go to state 8

    expr   go to state 20
    ident  go to state 13
    lit    go to state 14
    str    go to state 15


State 20

    7 expr: ident OP_BIND expr .

    $default  reduce using rule 7 (expr)
