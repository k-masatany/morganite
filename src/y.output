文法

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: expr CH_NL

    4 expr: number
    5     | "(" expr ")"
    6     | expr OP_ADD expr
    7     | expr OP_SUB expr
    8     | expr OP_MUL expr
    9     | expr OP_DIV expr

   10 number: INTEGER
   11       | DOUBLE


出現位置の規則による終端

$end (0) 0
error (256)
INTEGER (258) 10
DOUBLE (259) 11
CH_NL (260) 3
OP_ADD (261) 6
OP_SUB (262) 7
OP_MUL (263) 8
OP_DIV (264) 9
"(" (265) 5
")" (266) 5


出現位置の規則による非終端

$accept (12)
    左辺: 0
program (13)
    左辺: 1 2, 右辺: 0 2
statement (14)
    左辺: 3, 右辺: 1 2
expr (15)
    左辺: 4 5 6 7 8 9, 右辺: 3 5 6 7 8 9
number (16)
    左辺: 10 11, 右辺: 4


State 0

    0 $accept: . program $end

    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    program    go to state 4
    statement  go to state 5
    expr       go to state 6
    number     go to state 7


State 1

   10 number: INTEGER .

    $default  reduce using rule 10 (number)


State 2

   11 number: DOUBLE .

    $default  reduce using rule 11 (number)


State 3

    5 expr: "(" . expr ")"

    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    expr    go to state 8
    number  go to state 7


State 4

    0 $accept: program . $end
    2 program: program . statement

    $end     shift, and go to state 9
    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    statement  go to state 10
    expr       go to state 6
    number     go to state 7


State 5

    1 program: statement .

    $default  reduce using rule 1 (program)


State 6

    3 statement: expr . CH_NL
    6 expr: expr . OP_ADD expr
    7     | expr . OP_SUB expr
    8     | expr . OP_MUL expr
    9     | expr . OP_DIV expr

    CH_NL   shift, and go to state 11
    OP_ADD  shift, and go to state 12
    OP_SUB  shift, and go to state 13
    OP_MUL  shift, and go to state 14
    OP_DIV  shift, and go to state 15


State 7

    4 expr: number .

    $default  reduce using rule 4 (expr)


State 8

    5 expr: "(" expr . ")"
    6     | expr . OP_ADD expr
    7     | expr . OP_SUB expr
    8     | expr . OP_MUL expr
    9     | expr . OP_DIV expr

    OP_ADD  shift, and go to state 12
    OP_SUB  shift, and go to state 13
    OP_MUL  shift, and go to state 14
    OP_DIV  shift, and go to state 15
    ")"     shift, and go to state 16


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 11

    3 statement: expr CH_NL .

    $default  reduce using rule 3 (statement)


State 12

    6 expr: expr OP_ADD . expr

    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    expr    go to state 17
    number  go to state 7


State 13

    7 expr: expr OP_SUB . expr

    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    expr    go to state 18
    number  go to state 7


State 14

    8 expr: expr OP_MUL . expr

    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    expr    go to state 19
    number  go to state 7


State 15

    9 expr: expr OP_DIV . expr

    INTEGER  shift, and go to state 1
    DOUBLE   shift, and go to state 2
    "("      shift, and go to state 3

    expr    go to state 20
    number  go to state 7


State 16

    5 expr: "(" expr ")" .

    $default  reduce using rule 5 (expr)


State 17

    6 expr: expr . OP_ADD expr
    6     | expr OP_ADD expr .
    7     | expr . OP_SUB expr
    8     | expr . OP_MUL expr
    9     | expr . OP_DIV expr

    OP_MUL  shift, and go to state 14
    OP_DIV  shift, and go to state 15

    $default  reduce using rule 6 (expr)


State 18

    6 expr: expr . OP_ADD expr
    7     | expr . OP_SUB expr
    7     | expr OP_SUB expr .
    8     | expr . OP_MUL expr
    9     | expr . OP_DIV expr

    OP_MUL  shift, and go to state 14
    OP_DIV  shift, and go to state 15

    $default  reduce using rule 7 (expr)


State 19

    6 expr: expr . OP_ADD expr
    7     | expr . OP_SUB expr
    8     | expr . OP_MUL expr
    8     | expr OP_MUL expr .
    9     | expr . OP_DIV expr

    $default  reduce using rule 8 (expr)


State 20

    6 expr: expr . OP_ADD expr
    7     | expr . OP_SUB expr
    8     | expr . OP_MUL expr
    9     | expr . OP_DIV expr
    9     | expr OP_DIV expr .

    $default  reduce using rule 9 (expr)
